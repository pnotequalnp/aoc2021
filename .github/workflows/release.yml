name: "Release"

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Upload Binary
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        path: code

    - name: Install Nix
      uses: cachix/install-nix-action@v15
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          extra-substituters = file://${{ github.workspace }}/store-cache?trusted=true

    - name: Set up store cache
      uses: actions/cache@v2
      with:
        path: store-cache
        key: nix-store

    - name: Build executable
      run: nix build ./code

    - name: Package executable
      run: |
        cp result/bin/aoc2021 .
        nix shell nixpkgs#patchelf
        sudo patchelf aoc2021 --set-interpreter /usr/lib64/ld-linux-x86-64.so.2
        tar -czvf aoc2021.tar.gz aoc2021

    - name: Get Version
      id: get_version
      run: "echo ::set-output name=version::$(cut -c 11- <<< ${{ github.ref }})"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./aoc2021.tar.gz
        asset_name: aoc2021-${{ steps.get_version.outputs.version }}-linux-x86_64.tar.gz
        asset_content_type: application/gzip
